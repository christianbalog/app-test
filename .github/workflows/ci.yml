name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test

    - name: Run tests with coverage
      run: npm run test:coverage

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: matrix.node-version == '18.x'

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: |
        docker build -t cicd-test-app:${{ github.sha }} .
        docker build -t cicd-test-app:latest .
        docker inspect --format='{{index .RepoDigests 0}}' cicd-test-app:latest 2>/dev/null || docker images --digests cicd-test-app:latest --format '{{.Digest}}'

    - name: Test Docker image
      run: |
        docker run -d --name test-container -p 3000:3000 cicd-test-app:latest
        sleep 5
        curl -f http://localhost:3000/health || exit 1
        docker stop test-container
        docker rm test-container

  deploy:
    needs: [test, build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Deploy notification
      run: |
        echo "ðŸš€ Deployment would happen here"
        echo "âœ… All tests passed, Docker image built successfully"

    - name: Send digest to Tekton
      run: |
        IMAGE_DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' cicd-test-app:latest 2>/dev/null || docker images --digests cicd-test-app:latest --format '{{.Digest}}')
        curl -X POST http://tekton-digest.example.com -H "Content-Type: application/json" -d "{\"digest\":\"$IMAGE_DIGEST\",\"image\":\"cicd-test-app:latest\"}"