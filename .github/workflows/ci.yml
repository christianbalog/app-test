name: CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test

    - name: Run tests with coverage
      run: npm run test:coverage

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: matrix.node-version == '18.x'

  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      digest: ${{ steps.push.outputs.digest }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ibalog@grouperf.com
        password: Gefranie2001*

    - name: Build Docker image
      run: |
        docker build -t israelbalog01/cicd-test-app:latest .

    - name: Test Docker image
      run: |
        docker run -d --name test-container -p 3000:3000 israelbalog01/cicd-test-app:latest
        sleep 5
        curl -f http://localhost:3000/health || exit 1
        docker stop test-container
        docker rm test-container

    - name: Push to Docker Hub and get digest
      id: push
      run: |
        docker push israelbalog01/cicd-test-app:latest
        IMAGE_DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' israelbalog01/cicd-test-app:latest | cut -d'@' -f2)
        echo "digest=$IMAGE_DIGEST" >> $GITHUB_OUTPUT
        echo "Image digest: $IMAGE_DIGEST"
        docker tag israelbalog01/cicd-test-app:latest israelbalog01/cicd-test-app:${IMAGE_DIGEST#sha256:}
        docker push israelbalog01/cicd-test-app:${IMAGE_DIGEST#sha256:}

  deploy:
    needs: [test, build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop'

    steps:
    - uses: actions/checkout@v4

    - name: Deploy notification
      run: |
        echo "ðŸš€ Deployment would happen here"
        echo "âœ… All tests passed, Docker image built successfully"

    - name: Notify with image SHA
      run: |

        curl -X POST http://51.159.75.20:8128/ -H "Content-Type: application/json" -d '{"sha":"${{ needs.build.outputs.digest }}"}'
